{"version":3,"sources":["../../params.js","containers/socket.js","containers/context.js","components/Game/Tetris/useInterval.js","components/Game/Tetris/Matrix.js","components/Game/Tetris/movments.js","components/styles/StyledTetris.js","components/styles/StyledMenuButton.js","components/Menu/MenuButton.js","components/styles/StyledStartButton.js","components/Menu/StartButton.js","components/styles/StyledSoundButton.js","audio/tetris.mp3","components/Menu/SoundButton.js","components/styles/StyledLeaveButton.js","components/Menu/LeaveButton.js","components/Menu/Menu.js","components/Game/Tetris/Tetris.js","components/Game/Game.js","components/Home/Home.js","components/Room/Room.js","components/New_room/New_room.js","components/Join_room/Join_room.js","containers/App.js","index.js"],"names":["params","server","host","port","this","module","exports","socket","io","SocketContext","React","createContext","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","rotate","vec","center","angle","normVec","x","y","Math","round","cos","sin","translateX","unit","translateY","tetriminos","points","map","value","Mat2","PI","Right","position","Left","Down","StyledTetrisWrapper","styled","div","StyledTetris","StyledMenuButton","props","gameOver","MenuButton","text","StyledStartButton","button","StartButton","onClick","memo","StyledSoundWrapper","StyledMuteButton","StyledVolumeButton","SoundButton","useState","volume","setVolume","mute","setMute","useSound","TetrisSound","play","stop","className","StyledLeaveButton","LeaveButton","useContext","history","useHistory","emit","push","Menu","score","startGame","Tetris","WIDTH","start","setStart","tetriList","setTetriList","tetri","setTetri","Array","fill","row","backGrid","setBackGrid","frontGrid","setFrontGrid","HTMLgrid","setHTMLgrid","setGameOver","setScore","testCollision","newTetri","find","realPos","fillTetri","newGrid","collision","color","spectrum","tmp","getSpectrum","shift","length","prev","i","splice","removeCompletLine","style","backgroundColor","movment","on","role","tabIndex","onKeyDown","e","keyCode","handlerKeydown","Game","players","setPlayers","room","setRoom","regex","exec","location","hash","error","name","Object","keys","key","Home","Room","rooms","setRooms","roomName","New_room","setName","type","placeholder","onChange","target","preventDefault","alert","JoinRoom","App","Provider","path","exact","component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2a654c8.chunk.js","sourcesContent":["const params = {\n  server: {\n    host: 'localhost',\n    port: '3004',\n    get url(){ return ('http://' + this.host + ':' + this.port); }\n  },\n};\n\nmodule.exports = params;\n","import io from 'socket.io-client';\nimport params from '../../../params.js';\n\nconst herokuServer = 'https://red-tetris-malg.herokuapp.com/';\n\nconst socket = io(herokuServer);\n\nexport default socket;\n","import React from 'react';\nimport socket from './socket.js';\n\nconst SocketContext = React.createContext(socket);\n\nexport default SocketContext;\n","import { useRef, useEffect } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      if (typeof savedCallback?.current !== 'undefined') {\n        savedCallback?.current();\n      }\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","function rotate(vec, center, angle) {\n  const normVec = {\n    x: vec.x - center.x,\n    y: vec.y - center.y\n  };\n  const rotVec = {\n    x: Math.round((normVec.x * Math.cos(angle) - normVec.y * Math.sin(angle)) + center.x),\n    y: Math.round((normVec.x * Math.sin(angle) + normVec.y * Math.cos(angle)) + center.y)\n  };\n  return (rotVec);\n}\n\nfunction translateX(vec, unit) {\n  return ({ x: vec.x + unit, y: vec.y });\n}\n\nfunction translateY(vec, unit) {\n  return ({ x: vec.x, y: vec.y + unit });\n}\n\nexport default { rotate, translateX, translateY };\n","import Mat2 from './Matrix.js';\n\nfunction rotate(tetriminos) {\n  const test = { ...tetriminos, points: tetriminos.points.map(value => Mat2.rotate(value, tetriminos.center, 90 * Math.PI / 180)) };\n  return (test);\n}\n\nfunction Right(tetriminos) {\n  return ({ ...tetriminos, position: Mat2.translateX(tetriminos.position, 1) });\n}\n\nfunction Left(tetriminos) {\n  return ({ ...tetriminos, position: Mat2.translateX(tetriminos.position, -1) });\n}\n\nfunction Down(tetriminos) {\n  return ({ ...tetriminos, position: Mat2.translateY(tetriminos.position, 1) });\n}\n\nexport default { rotate, Right, Left, Down };\n","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;","import styled from 'styled-components';\n\nexport const StyledMenuButton = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center; \n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from 'react';\nimport { StyledMenuButton } from '../styles/StyledMenuButton';\n\nconst MenuButton = ({ gameOver, text }) => (\n    <StyledMenuButton gameOver={gameOver}>{text}</StyledMenuButton>\n);\n\nexport default MenuButton;\n","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;","import React from 'react';\nimport { StyledStartButton } from '../styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default React.memo(StartButton);\n","import styled from 'styled-components';\n\nexport const StyledSoundWrapper = styled.div`\n  display: flex;\n  overflow: auto;\n`;\n\nexport const StyledMuteButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 0.5vw 0;\n  padding: 1vw;\n  min-height: 0.2vw;\n  width: 100%;\n  border-radius: 1vw;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const StyledVolumeButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 0.5vw 0;\n  padding: 0.5vw;\n  min-height: 0.1vw;\n  width: 100%;\n  border-radius: 1vw;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;","export default __webpack_public_path__ + \"static/media/tetris.7ffe6109.mp3\";","import React, { useState, useEffect } from \"react\";\nimport { StyledVolumeButton, StyledSoundWrapper, StyledMuteButton } from \"../styles/StyledSoundButton\";\nimport useSound from \"use-sound\";\nimport TetrisSound from \"../../audio/tetris.mp3\";\n\nconst SoundButton = () => {\n  const [volume, setVolume] = useState(0.1);\n  const [mute, setMute] = useState(true);\n  const [play, { stop }] = useSound(TetrisSound, { volume: mute ? 0 : volume });\n\n  const muteMusic = () => {\n    setMute(!mute);\n  };\n\n  const decrease = () => {\n    setVolume(volume - 0.01);\n  };\n\n  const increase = () => {\n    setVolume(volume + 0.01);\n  };\n\n  useEffect(() => {\n    play();\n    return () => {\n      stop();\n    };\n  }, [play]);\n\n  return (\n    <StyledSoundWrapper>\n      <StyledVolumeButton className=\"btn btn-danger\" onClick={decrease}>\n        -\n      </StyledVolumeButton>\n      <StyledMuteButton className=\"btn btn-danger\" onClick={muteMusic}>\n          { mute ? ( \"Unmute\") : ( \"Mute\")}\n      </StyledMuteButton>\n      <StyledVolumeButton className=\"btn btn-danger\" onClick={increase}>\n        +\n      </StyledVolumeButton>\n    </StyledSoundWrapper>\n  );\n};\n\nexport default SoundButton;\n","import styled from 'styled-components';\n\nexport const StyledLeaveButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;","import React, { useContext } from \"react\";\nimport SocketContext from '../../containers/context.js';\nimport { useHistory } from 'react-router-dom';\nimport { StyledLeaveButton } from \"../styles/StyledLeaveButton\";\n\nconst LeaveButton = () => {\n  const socket = useContext(SocketContext);\n  const history = useHistory();\n\n  const leave = () => {\n    socket.emit(\"leaveRoom\");\n    history.push(\"/Room\");\n  };\n\n  return (\n    <div>\n      <StyledLeaveButton className=\"btn btn-danger\" onClick={leave}>\n        Leave Room\n      </StyledLeaveButton>\n    </div>\n  );\n};\n\nexport default LeaveButton;\n","import React from \"react\";\nimport MenuButton from \"./MenuButton\";\nimport StartButton from \"./StartButton\";\nimport SoundButton from \"./SoundButton\";\nimport LeaveButton from \"./LeaveButton\";\n\nconst Menu = (props) => {\n  return (\n    <aside>\n      {props.gameOver ? (\n        <MenuButton gameOver={props.gameOver} text=\"Game Over\" />\n      ) : (\n        <div>\n          <SoundButton />\n          <MenuButton text={`Score: ${props.score}`} />\n        </div>\n      )}\n      <StartButton callback={props.startGame} />\n      <LeaveButton />\n    </aside>\n  );\n};\n\nexport default Menu;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport SocketContext from \"../../../containers/context.js\";\nimport useInterval from \"./useInterval.js\";\nimport movment from \"./movments.js\";\nimport \"./Tetris.css\";\nimport { StyledTetrisWrapper, StyledTetris } from \"../../styles/StyledTetris\";\nimport Menu from \"../../Menu/Menu\";\n\nconst Tetris = () => {\n  const socket = useContext(SocketContext);\n  const WIDTH = 10;\n  const HEIGHT = 20;\n  const [start, setStart] = useState(false);\n  const [tetriList, setTetriList] = useState([]);\n  const [tetri, setTetri] = useState({});\n  const [backGrid, setBackGrid] = useState(\n    new Array(HEIGHT).fill().map((row) => new Array(WIDTH).fill(\"white\"))\n  );\n  const [frontGrid, setFrontGrid] = useState(\n    new Array(HEIGHT).fill().map((row) => new Array(WIDTH).fill(0))\n  );\n  const [HTMLgrid, setHTMLgrid] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const testCollision = (newTetri) => {\n    let result = newTetri.points.find((value) => {\n      const realPos = {\n        x: newTetri.position.x + value.x,\n        y: newTetri.position.y + value.y,\n      };\n      return (\n        realPos.x < 0 ||\n        realPos.x >= WIDTH ||\n        realPos.y < 0 ||\n        realPos.y >= HEIGHT ||\n        backGrid[realPos.y][realPos.x] !== \"white\"\n      );\n    });\n    return result ? true : false;\n  };\n\n  const fillTetri = (newTetri) => {\n    let newGrid = frontGrid.map((row) => row.map((value) => 0));\n    setTetri(newTetri);\n    newTetri.points.map((value) => {\n      newGrid[newTetri.position.y + value.y][newTetri.position.x + value.x] = 1;\n    });\n    setFrontGrid([...newGrid]);\n    };\n\n  const removeCompletLine = () => {\n    let newGrid = [...backGrid];\n    let score = 0;\n    backGrid.map((row, i) => {\n      if (!row.find((value) => value === \"white\")) {\n        score += 100;\n        newGrid.splice(i, 1);\n        newGrid.splice(0, 0, new Array(WIDTH).fill(\"white\"));\n      }\n    });\n    setScore(prev => prev + (score === 400 ? score * 2 : score));\n    setBackGrid(newGrid);\n  };\n\n  const getSpectrum = () => {\n    let spectrum = [];\n    for (let x = 0 ; x < WIDTH ; ++x) {\n      let tmp = 0;\n      for (let y = 0 ; y < HEIGHT ; ++y) {\n        if (backGrid[y][x] === 'white') {\n          ++tmp;\n        }\n      }\n      spectrum.push(tmp);\n    }\n    return (spectrum);\n  };\n\n  const collision = () => {\n    let newGrid = [...backGrid];\n    tetri.points.map((value) => {\n      newGrid[tetri.position.y + value.y][tetri.position.x + value.x] =\n        tetri.color;\n    });\n    socket.emit('updateSpectrum', getSpectrum());\n    setBackGrid([...newGrid]);\n    const newTetri = tetriList.shift();\n    if (tetriList.length < 3) {\n      socket.emit('getTetris', tetriminos => {\n        setTetriList(prev => [...prev, tetriminos]);\n      });\n    }\n    if (!testCollision(newTetri)) {\n      removeCompletLine();\n      fillTetri(newTetri);\n    } else {\n      setGameOver(true);\n      setStart(false);\n    }\n  };\n\n  const handlerKeydown = (e) => {\n    if (e.keyCode === 37) {\n      if (!testCollision(movment.Left(tetri))) {\n        fillTetri(movment.Left(tetri));\n      }\n    } else if (e.keyCode === 39) {\n      if (!testCollision(movment.Right(tetri))) {\n        fillTetri(movment.Right(tetri));\n      }\n    } else if (e.keyCode === 38) {\n      if (!testCollision(movment.rotate(tetri))) {\n        fillTetri(movment.rotate(tetri));\n      }\n    } else if (e.keyCode === 40) {\n      if (!testCollision(movment.Down(tetri))) {\n        setScore(prev => prev + 1);\n        fillTetri(movment.Down(tetri));\n      } else {\n        collision();\n      }\n    }\n  };\n\n  useEffect(() => {\n    let HTMLgrid = [];\n\n    for (let y = 0; y < HEIGHT; ++y) {\n      let row = [];\n      for (let x = 0; x < WIDTH; ++x) {\n        row.push(\n          <td\n            style={{\n              backgroundColor: frontGrid[y][x] ? tetri.color : backGrid[y][x],\n            }}\n            key={`${y * WIDTH + x}`}\n          ></td>\n        );\n      }\n      HTMLgrid.push(<tr key={`${y}`}>{row}</tr>);\n    }\n    setHTMLgrid(HTMLgrid);\n  }, [frontGrid]);\n\n  useInterval(() => {\n    if (!gameOver && start) {\n      if (!testCollision(movment.Down(tetri))) {\n        fillTetri(movment.Down(tetri));\n      } else {\n        collision();\n      }\n    }\n  }, 1000);\n\n  useEffect(() => {\n    socket.on('newTetris', tetriminos => {\n      setTetriList(prev => [...prev, tetriminos]);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on('getSetTetris', tetriminos => {\n      // Reset everything\n      const newTetri = tetriminos.shift();\n      let newGrid = [...backGrid];\n      setStart(true);\n      newGrid = newGrid.map((row) => row.map((value) => \"white\"));\n      setBackGrid(newGrid);\n      setTetriList([...tetriminos]);\n      setTetri(newTetri);\n      fillTetri(newTetri);\n      setGameOver(false);\n      setScore(0);\n    });\n  }, []);\n\n  const startGame = () => {\n    socket.emit('start');\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => handlerKeydown(e)}\n    >\n      <StyledTetris>\n        <table>\n          <tbody>{HTMLgrid}</tbody>\n        </table>\n        <Menu gameOver={gameOver} startGame={startGame} score={score} />\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SocketContext from '../../containers/context.js';\nimport Tetris from './Tetris/Tetris.js';\n\nconst Game = () => {\n  const socket = useContext(SocketContext);\n  const [players, setPlayers] = useState({});\n  const [room, setRoom] = useState({});\n  const history = useHistory();\n  const regex = /#([a-zA-Z]+)\\[([a-zA-Z]+)\\]/;\n\n  useEffect(() => {\n    const urlParams = regex.exec(location.hash);\n\n    if (!urlParams) {\n      history.push('/Home');\n    } else {\n      socket.emit('getMyRoom', (error, room) => {\n        if (error) {\n          history.push('/Home');\n        } else {\n          setRoom(room);\n          setPlayers(room.players);\n        }\n      });\n    }\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on('updatePlayers', (players) => {\n      setPlayers(players);\n    });\n  }, [players, socket]);\n\n  return (\n    <div className='container'>\n      <h1>{room.name}</h1>\n      {\n        Object.keys(players).map((key, i) => <p key={i}>{players[key].name}</p>)\n      }\n      <Tetris />\n    </div>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Home = () => {\n  const history = useHistory();\n\n  const play = () => {\n    history.push('/Room');\n  };\n\n  return (\n    <div className='container'>\n      <h1>Bienvenue sur Red Tetris</h1>\n      <button className='btn btn-danger' onClick={play}>Play</button>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SocketContext from '../../containers/context.js';\nimport './Room.css';\n\nconst Room = () => {\n  const socket = useContext(SocketContext);\n  const history = useHistory();\n  const [rooms, setRooms] = useState({});\n\n  const create_room = () => {\n    history.push('/New-room');\n  };\n\n  const joinRoom = (roomName) => {\n    history.push(`/Join-room#${roomName}`);\n  };\n\n  useEffect(() => {\n    socket.emit('getRooms', (rooms) => {\n      setRooms(rooms);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on('updateRooms', (rooms) => {\n      setRooms(rooms);\n    });\n  }, [rooms]);\n\n  return (\n    <div className='container'>\n      <h1>Room list</h1>\n      <div className='list-group mb-3'>\n      {\n        Object.keys(rooms).map((key, i) => {\n          return (\n            <li className='list-group-item p-1' key={i}>\n              <label><b>{rooms[key].name}</b></label>\n              <button className='btn btn-danger float-right' onClick={() => joinRoom(rooms[key].name)}>Join</button>\n            </li>\n          );\n        })\n      }\n      </div>\n      <button className='btn btn-danger' onClick={create_room}>Create New Room</button>\n    </div>\n  );\n};\n\nexport default Room;\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SocketContext from '../../containers/context.js';\n\nconst New_room = () => {\n  const socket = useContext(SocketContext);\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleRoomChange = (e) => {\n    setRoom(e.target.value);\n  };\n\n  const create = (e) => {\n    e.preventDefault();\n    if (name && room) {\n      socket.emit('join', name);\n      socket.emit('addRoom', room, (error) => {\n        if (!error) {\n          history.push(`/#${room}[${name}]`);\n        } else {\n          alert('Room name already exist');\n        }\n      });\n    }\n  };\n\n  return (\n    <div className='container'>\n      <h1>New Room Creation</h1>\n      <form>\n        <div className='form-group'>\n          <input className='form-control' type='text' placeholder='Username' onChange={handleNameChange} />\n        </div>\n        <div className='form-group'>\n          <input className='form-control' type='text' placeholder='Room name' onChange={handleRoomChange}/>\n        </div>\n        <input className='btn btn-danger' type='submit' value='Create' onClick={create} />\n      </form>\n    </div>\n  );\n};\n\nexport default New_room;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SocketContext from '../../containers/context.js';\n\nconst JoinRoom = () => {\n  const socket = useContext(SocketContext);\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const history = useHistory();\n  const regex = /#([a-zA-Z]+)/;\n\n  useEffect(() => {\n    // eslint-disable-next-line no-restricted-globals\n    setRoom(regex.exec(location.hash)[1]);\n    // eslint-disable-next-line no-restricted-globals\n  }, [location.hash]);\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const join = (e) => {\n    e.preventDefault();\n    if (name) {\n      socket.emit('join', name);\n      socket.emit('joinRoom', room, (error) => {\n        if (!error) {\n          history.push(`/#${room}[${name}]`);\n        } else {\n          alert('Username already taken');\n        }\n      });\n    }\n  };\n\n  return (\n    <div className='container'>\n      <h1>Join \"{room}\"</h1>\n      <form>\n        <div className='form-group'>\n          <input className='form-control' placeholder='Username' onChange={handleChange} />\n        </div>\n        <input className='btn btn-danger' type='submit' value='Join' onClick={join} />\n      </form>\n    </div>\n  );\n};\n\nexport default JoinRoom;\n","import React from 'react';\nimport { BrowserRouter as Routes, Route } from 'react-router-dom';\nimport socket from './socket.js';\nimport SocketContext from './context.js';\nimport Game from '../components/Game/Game.js';\nimport Home from '../components/Home/Home.js';\nimport Room from '../components/Room/Room.js';\nimport New_room from '../components/New_room/New_room.js';\nimport JoinRoom from '../components/Join_room/Join_room.js';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <SocketContext.Provider value={socket}>\n      <Routes>\n        <Route path='/' exact component={Game} />\n        <Route path='/Home' component={Home} />\n        <Route path='/Room' component={Room} />\n        <Route path='/New-room' component={New_room} />\n        <Route path='/Join-room' component={JoinRoom} />\n      </Routes>\n    </SocketContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './containers/App.js';\n\nReactDom.render(<App />, document.getElementById('tetris'));\n"],"sourceRoot":""}